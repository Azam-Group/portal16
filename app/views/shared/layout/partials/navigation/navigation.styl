
header {
	background: tomato;
	position: absolute;
	width: 100%;
	height 75px
	overflow hidden //purele visual
	z-index 200
}

#menu {
	height 100%
	width 100%
}

nav {
	overflow auto
	-webkit-overflow-scrolling: touch;
	height 100%
	width $drawer-width
	background #333333
	color white
	a {
		color white
	}
	position absolute
	top 0
}


.category-toggle, .category-hide, .hide {
	display none
}

.category-toggle ~ ul {
	max-height 0
	overflow hidden
	margin 0
}

.category-toggle:checked {
	~ ul {
		transition: max-height 500ms ease;
		max-height 500px
	}
	~ label {
		display none
	}
	~ .hide {
		display block
	}
}

label:focus {
	color blue
}


+isBelow($laptop) {
	nav {
		left -($drawer-width)
		label {
			display block
			margin 0
		}
		li {
			min-height 30px
		}
	}

	#menu {
		transition: left 500ms ease;
		position relative
		width 100%
		left 0
		&:target {
			background pink
			left $drawer-width

			.menu-link {
				display none
			}
			.close-link {
				display inline-block
			}
		}
	}
}

+isAbove($laptop) {
	header {
		display none
	}
	nav {
		top 0
		left 0
		z-index 200
		height 75px
		width 100%
		overflow visible
		padding-left 100px
		position fixed
		li {
			min-height 30px
			display inline-block
			label {
				padding 0 20px
			}
			&.isCategory {
				position initial
				> ul {
					margin-top 50px
					display block
					background pink
					position absolute
					li {
						display block
					}
				}

				&.isMega {
					> ul {
						left 0
						right 0
						width 100% //500px
						padding 0 60px
						> li {
							padding-top 40px
							lost-column: 1 / 2
							// li {
							//      display block
							// }
						}
					}
				}
			}
		}
		.category-toggle:checked ~ .hide {
			color yellow
			&:after {
				content ''
				display: block;
				position: fixed;
				left: 0;
				right: 0;
				// background: #d13f19;
				height: 5000px;

			}
		}
	}
}

//Siteheader
.SiteHeader {
	.SiteHeader__mobileOptions {
		> div {
			width 33.33%
			display block
			float left
		}

		a {
			//display inline-block //used?
			padding vr-block(1.5) vr-block(1) vr-block(0.25) vr-block(1)
			relative()
			height vr-block(2.75)
			&:before {
				display block
				width 100%
				text-align center
				absolute(top left)
				set-type(2)
				line-height vr-block(0)
				margin-top vr-block(1)
			}
			> span {
				font-size (100 /$major-third) %
			}
			&.site_navbar-logo {
				text-align center
			}
			&.site_navbar-search {
				text-align right
			}
		}
	}
}

//service menu
+isBelow($laptop) {
	.ServiceMenu {
		.ServiceMenu__teaser {
			height 150px
			width 100%
			background red
			position relative
			.ServiceMenu__teaser__message {
				position absolute
				bottom 0
			}
		}
	}
}

//only beacuse ther isn't a js service to load user and such yet.
@keyframes fadeInOut {
	0% {
		opacity: 0;
		right 50px
	}
	20% {
		opacity: 0;
	}
	30% {
		opacity: 1;
	}
	84% {
		opacity: 1;
	}
	99% {
		right 50px
	}
	100% {
		opacity: 0;
		right -9999px;
	}
}

+isAbove($laptop) {
	.ServiceMenu {
		position absolute
		right 0
		li {
			display inline-block
		}
		.ServiceMenu__teaser {
			position absolute
			top 100px
			width auto
			white-space nowrap
			padding 10px
			opacity 0
			animation: fadeInOut 5s;
			// transition: opacity 3s ease-in-out;
			// opacity 0
			background deepskyblue
		}
	}
}

//can there be multilayer menu and push on desktop
+isBelow($laptop) {
	.ServiceMenu > ul {
		// position relative //include image drawer header?
	}
	.isOwnMenu {
		left -100%
		transition: left 500ms ease;
		position absolute
		top 0
		background pink
		width 100%
		height 100%
		> a {
			background #333
			display block //visual
			&:before {
				content 'back '
			}
		}
		&.isActive {
			left 0%
		}
	}
}

+isAbove($laptop) {
	.isOwnMenu {
		> ul {
			top 75px
			right -300px
			transition: right 500ms ease;
			position absolute
			background pink
			width 300px
			height calc(100vh - 75px)
			> a {
				background #333
				display block //visual
				&:before {
					content 'back '
				}
			}
		}
		&.isActive > ul {
			right 0px
		}
	}
}



















main {
	//position 0 simply to avoid reflows that could be expensive
	position absolute
	top 75px
	width 100%
	height calc(100vh - 75px)
	// overflow hidden
}

.contentArea {
	background yellow
	position relative //to be pushable by the filter drawer
	overflow hidden
	transition: right 500ms ease;
}
+isBelow($laptop) {
	.contentArea {
		-webkit-overflow-scrolling: touch;
		overflow auto
		height: 100%
		right 0 //to make the transitition smooth we need a starting position
	}

}
+isAbove($laptop) {
	.contentArea__main {
		padding-left 85px
	}

}





//FILTERS

//use sibling elements

main > aside {
	right 0
	width $drawer-width
	position absolute
	top 0px
	transition: right 500ms ease;
	height calc(100vh - 75px)
	right 0

	background pink
	overflow hidden
	> div {
		height 100%
		background #333
		color #ddd
		overflow auto
		-webkit-overflow-scrolling touch
	}
	&:target {
		~ .contentArea {
			right $drawer-width
			overflow hidden
		}
	}
}





forceShowDrawer() {
	transition initial
	left 0
	~ .contentArea {
		padding-left $drawer-width
	}
	&:target ~ .contentArea {
		left 0
	}
}
+isAbove($laptop) {
	main > aside {
		z-index 20
		right initial
		left -($drawer-width)
		transition: left 500ms ease;
		position fixed
		top 75px
		~ .contentArea {
			transition: left 500ms ease;
			left 0
		}
		&:target {
			right initial
			left 0
			/*~ .contentArea {*/
				/*right initial*/
				/*left $drawer-width*/
			/*}*/
		}
		&.isLocked {
			forceShowDrawer()
		}
	}
}
+isAbove($desktop) {
	main > aside {
		forceShowDrawer()
	}
}
